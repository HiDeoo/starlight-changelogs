---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro'
import { render } from 'astro:content'
import context from 'virtual:starlight-changelogs/context'

import { getLink } from '../libs/link'
import { getVersionsPath, type VersionProps } from '../libs/routing'
import { getChangelogTitle, getSiteTitle } from '../libs/title'

type Props = VersionProps

const { changelog, entry, locale } = Astro.props

const { Content, headings } = await render(entry)

const versionTitle = Astro.locals.t('starlightChangelogs.version.title', {
  title: changelog.title,
  version: entry.data.title,
})

// TODO(HiDeoo) refactor date in component
---

<StarlightPage
  frontmatter={{
    head: [
      {
        tag: 'title',
        content: `${entry.data.title} ${context.titleDelimiter} ${changelog.title} ${context.titleDelimiter} ${getSiteTitle(Astro.currentLocale)}`,
      },
    ],
    next: entry.pagination.next,
    pagefind: changelog.pagefind,
    prev: entry.pagination.prev,
    title: getChangelogTitle(changelog, locale),
  }}
  headings={[{ depth: 2, slug: entry.data.slug, text: versionTitle }, ...headings]}
>
  <a href={getLink(getVersionsPath(changelog, locale))}>Back to changelog</a>
  {
    entry.data.link && (
      <a href={entry.data.link}>
        {Astro.locals.t('starlightChangelogs.version.open', { provider: entry.data.provider.label })}
      </a>
    )
  }
  {
    entry.data.date && (
      <time datetime={entry.data.date.toISOString()}>
        {Astro.locals.t('starlightChangelogs.version.date', { date: entry.data.date })}
      </time>
    )
  }
  <h2 id={entry.data.slug}>{versionTitle}</h2>
  <Content />
</StarlightPage>
